package de.crazymemecoke.features.modules.exploits;

import com.darkmagician6.eventapi.EventTarget;
import de.crazymemecoke.manager.modulemanager.Category;
import de.crazymemecoke.manager.modulemanager.Module;
import de.crazymemecoke.utils.events.PacketReceiveEvent;
import de.crazymemecoke.utils.events.PacketSendEvent;
import de.crazymemecoke.utils.render.Rainbow;
import de.crazymemecoke.utils.time.TickEvent;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.entity.Entity;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import org.lwjgl.input.Keyboard;

import java.util.ArrayList;

public class Blink extends Module {
    private final ArrayList<Packet> packets = new ArrayList();

    public Blink() {
        super("Blink", Keyboard.KEY_NONE, Category.EXPLOITS, Rainbow.rainbow(1, 1).hashCode());
    }

    private EntityOtherPlayerMP fakeEntity;

    @EventTarget
    public void onTick(TickEvent e) {
        setDisplayName("[" + this.packets.size() + "] Blink");
    }

    @EventTarget
    public void onPacketSend(PacketSendEvent e) {
        if (((isMoving(mc.thePlayer)) || (mc.thePlayer.lastTickPosY != mc.thePlayer.posY))
                && ((e.getPacket() instanceof C03PacketPlayer))) {
            e.setCancelled(true);
            this.packets.add(e.getPacket());
        }
        if (((e.getPacket() instanceof C07PacketPlayerDigging))
                || ((e.getPacket() instanceof C08PacketPlayerBlockPlacement))
                || ((e.getPacket() instanceof C0BPacketEntityAction)) || ((e.getPacket() instanceof C02PacketUseEntity))
                || ((e.getPacket() instanceof C0APacketAnimation))) {
            e.setCancelled(true);
            this.packets.add(e.getPacket());
        }
        if ((((e.getPacket() instanceof C00PacketKeepAlive) ? 0 : 1)
                & ((e.getPacket() instanceof C01PacketChatMessage) ? 0 : 1)
                & ((e.getPacket() instanceof C16PacketClientStatus) ? 0 : 1)) != 0) {
            e.setCancelled(true);
        }
    }

    @EventTarget
    public void onPacketReceive(PacketReceiveEvent e) {
        if (((e.getPacket() instanceof S08PacketPlayerPosLook)) && (mc.theWorld.getEntityByID(64199) != null)) {
            S08PacketPlayerPosLook packet1 = (S08PacketPlayerPosLook) e.getPacket();
            mc.theWorld.getEntityByID(64199).setPositionAndRotation(packet1.getX(),
                    packet1.getY(), packet1.getZ(), packet1.getYaw(), packet1.getPitch());
            e.setCancelled(true);
        }
    }

    public void onEnable() {
        if (mc.theWorld != null) {
            this.fakeEntity = new EntityOtherPlayerMP(mc.theWorld, mc.thePlayer.getGameProfile());
            this.fakeEntity.inventory = mc.thePlayer.inventory;
            this.fakeEntity.copyLocationAndAnglesFrom(mc.thePlayer);
            this.fakeEntity.posY = mc.thePlayer.getEntityBoundingBox().minY;
            this.fakeEntity.rotationPitch = mc.thePlayer.rotationPitch;
            this.fakeEntity.rotationYaw = mc.thePlayer.rotationYaw;
            this.fakeEntity.rotationYawHead = mc.thePlayer.rotationYawHead;
            this.fakeEntity.setSneaking(mc.thePlayer.isSneaking());

            mc.theWorld.addEntityToWorld(64199, this.fakeEntity);

            this.fakeEntity = null;
        }
    }

    public void onDisable() {
        if (mc.theWorld.getEntityByID(64199) != null) {
            mc.theWorld.removeEntityFromWorld(64199);
        }
        for (Packet packet : this.packets) {
            mc.getNetHandler().getNetworkManager().sendPacket(packet);
        }
        this.packets.clear();
    }

    public boolean isMoving(Entity e) {
        return (e.motionX != 0.0D) && (e.motionZ != 0.0D) && ((e.motionY != 0.0D) || (e.motionY > 0.0D));
    }
}
