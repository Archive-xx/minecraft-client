package de.crazymemecoke.module.modules.exploits;

import de.crazymemecoke.module.Category;
import de.crazymemecoke.module.Module;
import net.minecraft.client.Minecraft;
import net.minecraft.client.network.NetHandlerPlayClient;
import net.minecraft.network.play.client.C03PacketPlayer;
import org.lwjgl.input.Keyboard;

public class Phase extends Module {
    public Phase() {
        super("Phase", Keyboard.KEY_NONE, Category.EXPLOITS, -1);
    }

    public void onUpdate() {
        if (this.getState()) {
            double x;
            double z;
            double var18;
            Minecraft var10000, var10001, var10002, var10003, var10004, var10005 = mc;
            double var19;
            boolean var20;
            label31:
            {
                double multiplier = 0.37D;
                double mx = Math.cos(Math.toRadians(mc.thePlayer.rotationYaw + 90.0F));
                double mz = Math.sin(Math.toRadians(mc.thePlayer.rotationYaw + 90.0F));
                var18 = (double) mc.thePlayer.movementInput.moveForward * multiplier * mx;
                x = var18 + (double) mc.thePlayer.movementInput.moveStrafe * multiplier * mz;
                var18 = (double) mc.thePlayer.movementInput.moveForward * multiplier * mz;
                double multiplier1;
                z = var18 - (double) mc.thePlayer.movementInput.moveStrafe * multiplier * (double) this.mx(multiplier1 = 0.2D);
                var18 = (double) mc.thePlayer.movementInput.moveForward * multiplier * mx;
                var18 += (double) mc.thePlayer.movementInput.moveStrafe * multiplier * mz;
                var18 = (double) mc.thePlayer.movementInput.moveForward * multiplier * mz;
                var19 = (double) mc.thePlayer.movementInput.moveStrafe * multiplier;
                if (mc.thePlayer.isCollidedHorizontally) {
                    if (!mc.thePlayer.isOnLadder()) {
                        var20 = true;
                        break label31;
                    }
                }

                var20 = false;
            }

            if (mc.thePlayer.isCollidedHorizontally) {
                if (mc.thePlayer.isCollidedHorizontally) {
                    if (!mc.thePlayer.isOnLadder()) {
                        if (!mc.thePlayer.isEntityInsideOpaqueBlock()) {
                            NetHandlerPlayClient var16 = mc.getNetHandler();
                            double var17 = mc.thePlayer.posX + x;
                            var16.addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(var17, mc.thePlayer.posY, mc.thePlayer.posZ + z, false));
                            for (int i = 1; i < 134; ++i) {
                                var16 = mc.getNetHandler();
                                var16.addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, 3.988465674311579E307D, mc.thePlayer.posZ, false));
                            }
                            var19 = mc.thePlayer.posX + x - 0.01D;
                            mc.thePlayer.setPosition(var19, mc.thePlayer.posY, mc.thePlayer.posZ + z - 0.4D);
                            var19 = mc.thePlayer.posX + x;
                            mc.thePlayer.setPosition(var19, mc.thePlayer.posY, mc.thePlayer.posZ + z);
                        }
                    }
                }
            }
        }

    }

    private float mx(boolean b) {
        return 0.0F;
    }

    private float mx(double d) {
        return 0.0F;
    }

}
